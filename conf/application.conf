# Database configuration for the default database
db.default.driver = "org.postgresql.Driver"
db.default.url = "jdbc:postgresql://ep-rough-recipe-a5a55xmh.us-east-2.aws.neon.tech/neondb?sslmode=require"
db.default.username = "neondb_owner"
db.default.password = "LM4Z8fNhacVg"
db.default.hikari.maximumPoolSize = 10

# Disabling evolutions (optional)
play.evolutions.enabled = false
play.evolutions.autoApply = true

flyway {
  enabled = true
  url = "jdbc:postgresql://ep-rough-recipe-a5a55xmh.us-east-2.aws.neon.tech/neondb"
  user = "neondb_owner"
  password = "LM4Z8fNhacVg"
  locations = "classpath:conf/db/migrations/neondb"
}


slick.dbs.default.profile = "slick.jdbc.PostgresProfile$"
slick.dbs.default.db.url =  "jdbc:postgresql://ep-rough-recipe-a5a55xmh.us-east-2.aws.neon.tech/neondb"
slick.dbs.default.db.user = "neondb_owner"
slick.dbs.default.db.password = "LM4Z8fNhacVg"
slick.dbs.default.db.driver = "org.postgresql.Driver"
slick.dbs.default.db.properties = {}
slick.dbs.default.db.migrationPath = "filesystem:conf/db/migration"
logger.application = DEBUG
logger.play.modules.flyway = DEBUG
logger.root = DEBUG
play.filters.headers.contentSecurityPolicy = null

swagger.api.host = ""
swagger.api.info {
  title = "PrefCards"
  description = "APIs for PrefCards"
  contact = "fallen.snitch@gmail.com"
  version = "1.0.0"
}

play.modules.enabled += "play.modules.swagger.SwaggerModule"

#Render deploy
#play.server.http.port = ${?PORT}
#play.server.http.address = "0.0.0.0"
play.http.secret.key = "962un0XnrtwdQhZoT/0oUGgnLrZrCFaO+zi8lhuFYeNlIVAzSPRyOcjZMccpdVpCNIZxaV7bqZUol05o8/pHcQ=="
play.filters.hosts {
  allowed = ["prefcards.onrender.com", "localhost"]
}

play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = ["http://localhost:8080", "http://localhost:61000"]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allowedHeaders = ["Accept", "Content-Type", "Origin", "Authorization"]
  supportsCredentials = true
}

play.filters.enabled -= "play.filters.csrf.CSRFFilter"


